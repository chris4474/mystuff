---
#
# this playbooks push all DNS rewrites from a first adguard home server to a second one
# note: that is not really a sync has all rewrites in the second server are first deleted before repopulating
#
- hosts: localhost
  gather_facts: no
  vars_files:
  - secrets.yaml

  vars:
    adg1_access: "{{ vault_adg1_user }}:{{ vault_adg1_password }}"
    adg2_access: "{{ vault_adg2_user }}:{{ vault_adg2_password }}"

  tasks:
#
# the AdGuard Home API uses basic authentication
#
  - set_fact:
      adg1_auth: "{{ adg1_access | b64encode }}"
      adg2_auth: "{{ adg2_access | b64encode }}"

#
# Make sure we can retrieve the set of DNS rewrite rules from AdGuard1 before attempting to
# delete the set of rules configured on AdGuard2!
#
  - name: get AdGuard1 rewrite rules
    ansible.builtin.uri:
      url: "{{ adg1_url }}/rewrite/list"
      method: get
      headers:
        Authorization: "Basic {{ adg1_auth }}"
    register: adguard1_rewrite_rules

  - name: get AdGuard2 rewrite rules
    ansible.builtin.uri:
      url: "{{ adg2_url }}/rewrite/list"
      method: get
      headers:
        Authorization: "Basic {{ adg2_auth }}"
    register: adguard2_rewrite_rules

  - name: Delete rewrite rules in AdGuard2
    ansible.builtin.uri:
      url: "{{ adg2_url }}/rewrite/delete"
      method: post
      headers:
        Authorization: "Basic {{ adg2_auth }}"
      body_format: json
      body:
        domain: "{{ item.domain }}"
        answer: "{{ item.answer }}"
    when:
      - item.domain not in dont_touch_these_rules
    with_items:
      "{{ adguard2_rewrite_rules.json }}"

  - name: repopulate AdGuard2 rewrite with AdGuard1 rewrite rules
    ansible.builtin.uri:
      url: "{{ adg2_url }}/rewrite/add"
      method: post
      headers:
        Authorization: "Basic {{ adg2_auth }}"
      body_format: json
      body:
        domain: "{{ item.domain }}"
        answer: "{{ item.answer }}"
    when:
      - item.domain not in dont_touch_these_rules
    with_items:
      "{{ adguard1_rewrite_rules.json }}"

